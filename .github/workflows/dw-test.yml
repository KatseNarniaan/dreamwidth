name: dw-test build

on:
  push:
    paths:
      - .github/workflows/dw-test.yml
  workflow_dispatch:

env:
  IMAGE_NAME: test
  TASK_NAME: web-canary
  SHA_TO_DEPLOY: sha256:1bc75f1b13e94fd7a8725fbd7397a1468104d8f9cdd0d7ac217cd54f00097c55

jobs:
  build:
    runs-on: ubuntu-latest

    # permissions:
      # id-token: write
      # contents: read
      # packages: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          # role-to-assume: arn:aws:iam::194396987458:role/dw-github-actions
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update task definition
        run: |
          # Get existing task definition
          TASK_DEFINITION=$(aws ecs describe-task-definition \
            --task-definition arn:aws:ecs:us-east-1:194396987458:task-definition/$TASK_NAME \
            --region "us-east-1")

          # Update task with new SHA and extract just the fields that are valid
          # for registering a task definition (this feels brittle? what if the API
          # changes? oh well)
          echo $TASK_DEFINITION | \
            jq '.taskDefinition' | \
            jq '.containerDefinitions[0].image='\"ghcr.io/dreamwidth/$IMAGE_NAME@$SHA_TO_DEPLOY\" | \
            jq '{family, taskRoleArn, executionRoleArn, networkMode, containerDefinitions, volumes, placementConstraints, requiresCompatibilities, cpu, memory, tags, pidMode, ipcMode, proxyConfiguration, inferenceAccelerators, ephemeralStorage, runtimePlatform}' | \
            jq 'with_entries( select( .value != null ) )' \
            > task-def.json

          # Register new task version         
          aws ecs register-task-definition \
            --family $TASK_NAME \
            --region "us-east-1" \
            --cli-input-json file://task-def.json

      - name: Notify Discord
        uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
